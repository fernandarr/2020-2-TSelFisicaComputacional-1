
# Tarea 1: Números duales

> La fecha de envío del primer PR de la tarea es **6 de marzo**. NOTA: Este primer PR será revisado y se les hará llegar comentarios. El PR *final* deberá ser **aceptado** *a más tardar* el día **20 de marzo**.


Para explicar los *números duales* recordaremos algunas propiedades de los números complejos.

Los números complejos los podemos entender como una *pareja ordenada* $z=(x, y)$ que algebraicamente escribimos $z = x +i y$, donde $x,y\in\mathbb R$, y el "número" $i$ lo definimos a partir de $i^2 = -1$. Decimos que $x$ es la *parte real* de $z$, y que $y$ es su *parte imaginaria*.
Con esta definición, podemos extender las operaciones aritméticas al igual que las funciones elementales de manera sencilla. Ésta es, de hecho, la manera en que están implementados los números complejos en Julia.

En el mismo espíritu, uno puede definir al *par ordenado* $\overleftrightarrow{x} = (x, x^\prime) = x + \epsilon x^\prime$, con $x, x^\prime \in \mathbb R$, y donde $\epsilon$ lo definimos con la propiedad $\epsilon^2=0$. Es fácil pues convencerse que estas estructuras, que llamaremos *números duales*, cumplen:

\begin{eqnarray}
(x + \epsilon x^\prime) \pm (y + \epsilon y^\prime) & = & (x\pm y) + \epsilon (x^\prime\pm y^\prime),\\
(x + \epsilon x^\prime) \cdot (y + \epsilon y^\prime) & = & (x\cdot y) + \epsilon (xy^\prime+y x^\prime).
\end{eqnarray}

Llamaremos a $x$ la *parte principal* y a $x^\prime$ la *parte derivada* de $\overleftrightarrow{x}$.


## Ejercicio 1

- A partir de $\overleftrightarrow{z} \cdot \overleftrightarrow{y} = \overleftrightarrow{x}$, obtener la expresión para $\overleftrightarrow{z}  = \overleftrightarrow{x} / \overleftrightarrow{y}$. Es decir, obtener qué es $z$ y $z^\prime$ en términos de las componentes de $\overleftrightarrow{x}$ y $\overleftrightarrow{y}$.
Si es necesario pueden iniciar en $\overleftrightarrow{z} = {\overleftrightarrow{y}}^{-1}$

- De la expresión obtenida (y de las fórmulas anteriores), ¿qué podemos decir/concluir/interpretar de $z^\prime$?
(En caso de falta de inspiración, ver [aquí](https://en.wikipedia.org/wiki/Automatic_differentiation#Automatic_differentiation_using_dual_numbers), pero es sugiero esforzarse y *arriesgarse* tratando de reconocer las expresiones.)

si expresamos $\overleftrightarrow{z} = \frac{\overleftrightarrow{x}}{\overleftrightarrow{y}} \cdot \frac{\overleftrightarrow{y}^*}{\overleftrightarrow{y}^*} $ donde $ \overleftrightarrow{y}^* $ es conjugar la parte que multiplica $\epsilon$ . Por la definición del producto 
de dos números duales se tiene:
\begin{eqnarray}
    \overleftrightarrow{z} = \frac{ (x + \epsilon x^\prime)}{(y + \epsilon y^\prime)} \cdot \frac{(y - \epsilon y^\prime)}{(y - \epsilon y^\prime)}\\
                           = \frac{(xy) + \epsilon(-xy^\prime + yx^\prime)}{y^2} \\
        z = \frac{x}{y} \\
        z^\prime = \frac{yx^\prime - xy^\prime}{y^2}              
\end{eqnarray}
La parte de  $z^\prime$ se ve como la derivada de z



## Ejercicio 2

- Definir una estructura `Dual` que represente a los números duales; por sencillez pueden considerar que los campos del `Dual` son `Float64`, aunque pueden *osar* y tratar de implementar el caso paramétrico `Dual{T <: Real}`, donde `T` es el tipo de *ambos* campos.

- Sobrecargar las operaciones de tal manera que las cuatro operaciones aritméticas que involucrena dos `Dual`-es, den el resultado que se espera.

- Definan un método específico para crear duales (constructor externo), a partir de un sólo valor (en lugar de los dos requeridos), que corresponderá a $\overleftrightarrow{x_0} = (x_0, 0)$. ¿Es el *0* de esta definición, o sea, $x_0'=0$, compatible con la interpretación que dieron en el ejercicio anterior para la parte derivada

- Extiendan los métodos que permitan sumar/restar y multiplicar/dividir un número (`Real`) y un `Dual`. (Recuerden que ciertas operaciones son conmutativas!).
    NOTA: Este ejercicio lo pueden hacer escribiendo todos los métodos, uno a uno. Otra opció es usar `promote` y `convert` para definir reglas de promoción y conversión; [la documentación](https://docs.julialang.org/en/v1/manual/conversion-and-promotion/) tiene más información, por si este camino les interesa.

- Incluyan varios casos (propuestos por ustedes mismos) donde se *compruebe* que lo que implementaron da el resultado que debería ser. Para esto, pueden usar la librería estándard [`Test`](https://docs.julialang.org/en/v1/stdlib/Test/) de Julia.

```julia
struct Dual{ T <: Real}<: AbstractArray{T,1}
x :: T
y :: T
 function Dual(x :: T, y :: T) where {T}
        @assert length(x) == length(y) == 1
        return new{T}(x, y)
    end
end
```

```julia
z = Dual(1.0,2.0)
t = Dual(2.0,1.0)
const ϵ = Dual(0.0 , 1.0)
```

```julia
import Base: size
size(::Dual{T}) where {T} = (2,)
function Base.getindex(v::Dual, i::Int)
    if i == 1
        return v.x
    elseif i == 2
        return v.y
    else
        throw(AssertError)
    end
end
```

```julia
import Base: show, +, *, -, /
```

```julia
+(a::Dual, b::Dual) = Dual(a.x + b.y,a.y + b.y)
-(a::Dual, b::Dual) = Dual(a.x - b.y,a.y - b.y)
*(a::Dual, b::Dual) = Dual(a.x*b.x,a.x*b.y + b.x*a.y)
/(a::Dual, b::Dual) = Dual(a.x/b.x,(b.x*a.y-a.x*b.y)/b.x^2)
```

```julia
Dual(5,4)
```

## Ejercicio 3

Usando `x = Dual(2.0)`, calcular
$$
g(x) = \frac{3x^2-8x+1}{7x^3-1}.
$$

```julia
```

```julia
```

## Ejercicio 4

- A partir de la interpretación que han hecho para la parte derivada (último inciso del Ejercicio 1), y *generalizando* esa interpretación de qué representa cada campo y en particular el segundo de `Dual{T}`, *extiendan* las funciones `sin(a::Dual)`, `cos(a::Dual)`, `tan(a::Dual)`, `^(a::Dual, n::Int)`, `sqrt(a::Dual)`, `exp(a::Dual)` y `log(a::Dual)`.

- Al igual que antes, construyan algún conjunto de pruebas que muestren, de manera sencilla, que lo que hicieron da lo que *debería* dar.

```julia
```
